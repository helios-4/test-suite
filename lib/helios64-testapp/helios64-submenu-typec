#!/bin/bash

helios64_typec_state[1]=off
helios64_typec_state[2]=off
helios64_typec_list="usb4 dp"
TAGPU_EXEC="tagpu"
TASTORAGE_EXEC="tastorage64"

helios64_typec_dp_test_run()
{
    echo "Starting GPU"
    $TAGPU_EXEC start
    return 0
}

helios64_typec_dp_test_stop()
{
    echo "Stopping GPU"
    $TAGPU_EXEC stop
    return 0
}

helios64_typec_host_test_run()
{
    echo "Starting $1"
    $TASTORAGE_EXEC start $1
    return 0
}

helios64_typec_host_test_stop()
{
    echo "Stopping $1"
    $TASTORAGE_EXEC stop $1
    return 0
}

helios64_typec_stop_all()
{
    helios64_usb_test_stop usb4
    helios64_typec_host_test_stop
}

helios64_typec_test_apply()
{
    local list_stop list_start

    clear

    #set -x
    if [[ $# -eq 0 ]]; then
        return 0
    fi

    while (( "$#" )); do
        list_start=$(echo "$list_start $1")
        shift
    done

    # Get list of device to stop
    for stop in $helios64_typec_list
    do
        is_stop=1
        for start in $list_start
        do
            if [[ $stop = $start ]]; then
                is_stop=0
                break
            fi
        done

        [[ $is_stop -eq 1 ]] && list_stop=$(echo "$list_stop $stop")
    done

    # Stop test
    for stop in $list_stop
    do
		case $stop in
            "usb4")
               helios64_typec_state[1]=off
               helios64_typec_host_test_stop $start
               ;;
            "dp")
               helios64_typec_state[2]=off
               helios64_typec_dp_test_stop
               ;;
        esac
    done

    # Start test
    for start in $list_start
    do
        case $start in
            "usb4")
               helios64_typec_state[1]=on
               helios64_typec_host_test_run $start
               ;;
            "dp")
               helios64_typec_state[2]=on
               helios64_typec_dp_test_run
               ;;
        esac
    done
    #set +x

    return 0
}

helios64_typec_get_list()
{
    return 0
}


helios64_menu_typec()
{
    local returncode

    if [ "$1" = "all" ]; then
        helios64_typec_test_apply $helios64_typec_list
        return 0
    fi

    while true
    do
        exec 3>&1
        value=$(dialog --ascii-lines --ok-label "Apply" \
            --cancel-label "Return" \
            --checklist "Select USB Type-C (J15) functionalities to test" \
            10 50 4 \
            "usb4" "USB Type-C 3.0 Host" ${helios64_typec_state[1]} \
            "dp" "USB Type-C DisplayPort" ${helios64_typec_state[2]} \
            2>&1 1>&3)

        returncode=$?
        exec 3>&-

        [[ $returncode == $DIALOG_CANCEL || $returncode == $DIALOG_ESC ]] && clear && return 1

        helios64_typec_test_apply $value
    done
}
